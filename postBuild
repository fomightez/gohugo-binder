#!/bin/bash

# ----------Install GO language -------------
# based on https://github.com/go-hep/binder/blob/master/postBuild
# and https://golang.org/dl/
# Originally moved go installation to apt based on https://github.com/aborruso/bashnotebook/blob/master/binder/apt.txt 
# ; however, that resulted in old version 1.10 something and I know current version is 1.13.6. I think I had that working
# except wasn't in the path. Without it in the path I could not type `go` and instead had to give absolute path. That should
# be fixed now by adding a symolbic link to it in `~/.local/bin` like does at 
# https://github.com/aborruso/bashnotebook/blob/0de5d657de745fffe53ed1acc35d01c75d389b6e/binder/postBuild#L48
# Note that I had realized I didn't need go installed if not compiling Hugo, but would like to work out
# how to get recent versions working on Binder since close.

set -e

GOVERS=1.13.6

mkdir -p \
	$HOME/.local/go/$GOVERS \
	$HOME/.local/bin \
	$HOME/go

echo "::: install Go ${GOVERS}..."
curl -O -L https://golang.org/dl/go${GOVERS}.linux-amd64.tar.gz
tar -C $HOME/.local/go/$GOVERS -zxf go${GOVERS}.linux-amd64.tar.gz
/bin/rm go${GOVERS}.linux-amd64.tar.gz

export GOROOT=$HOME/.local/go/$GOVERS/go
export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
echo $GOPATH
# add it to path like in https://github.com/aborruso/bashnotebook/blob/0de5d657de745fffe53ed1acc35d01c75d389b6e/binder/postBuild#L48
cd ~/.local/bin
ln -s $GOROOT/bin/go go
cd ~


# Install up-to-date HUGO. 
# Apt only is getting version 0.40. So don't use `apt.txt` as route to install.
# Following directions at https://vexxhost.com/resources/tutorials/how-to-install-and-use-hugo-the-static-site-generator-on-ubuntu-14-04/
# and combining with more up to date info at https://computingforgeeks.com/how-to-install-hugo-on-ubuntu-debian/
# didn't work because I couldn't use dpkg without superuse permissions
# So now I install current version (0.62.2) by adapting instructions from 
# https://gohugo.io/getting-started/installing/#install-hugo-from-tarball (it is using instructionsfrom mac
# but https://discourse.gohugo.io/t/quick-start-doesnt-work-on-ubuntu/14686/8 said to be useful for installing for Ubuntu too)
cd ~/go #just using this directory that is empty currently as a place to unpack hugo so README doesn't clobber my repo README &
# move it to path similar to https://github.com/aborruso/bashnotebook/blob/0de5d657de745fffe53ed1acc35d01c75d389b6e/binder/postBuild#L48
# , combined with https://github.com/go-hep/binder/blob/master/postBuild approach
curl -OL https://github.com/gohugoio/hugo/releases/download/v0.62.2/hugo_0.62.2_Linux-64bit.tar.gz
tar -C ~/.local/bin -xvzf hugo_0.62.2_Linux-64bit.tar.gz
# clean up hugo install
rm hugo_0.62.2_Linux-64bit.tar.gz
rm ~/.local/bin/LICENSE
rm ~/.local/bin/README.md
cd ~


# Trying to get development server accessible in session
# Jupyter/Jupyterlab extension for proxying internal applications
jupyter serverextension enable --sys-prefix jupyter_server_proxy
#jupyter labextension install jupyterlab-server-proxy --no-build #Right now doesn't work with JupyterLab 1.0 and above; can either have old JupyterLab or the serverproxy but not both
#try the solution from https://github.com/jupyterhub/jupyter-server-proxy/issues/139#issuecomment-544763062 for newer JupyterLab
jupyter labextension install jupyterlab-server-proxy-saulshanabrook